tvals <- seq(.1,.9,.1)
q1 <- rq(foodexp ~ income, tau=tvals,data=engel)
resids <- resid(q1)
psi <- function(e,tau){
tau - (e < 0)
}
getPsiMat <- function(model){
resids <- residuals(model)
psiMat <- resids
for(i in 1:dim(resids)[2]){
psiMat[,i] <- psi(resids[,i],model$tau[i])
}
psiMat
}
getPsiCov <- function(model){
resids <- residuals(model)
psiMat <- resids
for(i in 1:dim(resids)[2]){
psiMat[,i] <- psi(resids[,i],model$tau[i])
}
n <- dim(resids)[1]
psiCov <- t(psiMat)%*%psiMat/n
psiCov
}
n <- 100
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
q2 <- rq(y ~ x, tau=tvals)
psi1 <- getPsiCov(q1)
psi2 <- getPsiCov(q2)
pm1 <- getPsiMat(q1)
pm2 <- getPsiMat(q2)
eigenTrack <- NULL
n <- 1000
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
for(k in seq(5,100,5)){
tvals <- seq(.05,.95, length=k)
q <- rq(y ~ x, tau=tvals)
psiCov <- getPsiCov(q)
eigenTrack <- rbind(eigenTrack, c(k,eigen(psiCov)$values[1]))
}
eigenTrack
library(quantreg)
data(engel)
tvals <- seq(.1,.9,.1)
q1 <- rq(foodexp ~ income, tau=tvals,data=engel)
resids <- resid(q1)
psi <- function(e,tau){
tau - (e < 0)
}
getPsiMat <- function(model){
resids <- residuals(model)
psiMat <- resids
for(i in 1:dim(resids)[2]){
psiMat[,i] <- psi(resids[,i],model$tau[i])
}
psiMat
}
getPsiCov <- function(model){
resids <- residuals(model)
psiMat <- resids
for(i in 1:dim(resids)[2]){
psiMat[,i] <- psi(resids[,i],model$tau[i])
}
n <- dim(resids)[1]
psiCov <- t(psiMat)%*%psiMat/n
psiCov
}
n <- 100
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
q2 <- rq(y ~ x, tau=tvals)
psi1 <- getPsiCov(q1)
psi2 <- getPsiCov(q2)
pm1 <- getPsiMat(q1)
pm2 <- getPsiMat(q2)
eigenTrack <- NULL
n <- 500
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
for(k in seq(5,100,5)){
tvals <- seq(.05,.95, length=k)
q <- rq(y ~ x, tau=tvals)
psiCov <- getPsiCov(q)
eigenTrack <- rbind(eigenTrack, c(k,eigen(psiCov)$values[1]))
}
eigenTrack
library(quantreg)
data(engel)
tvals <- seq(.1,.9,.1)
q1 <- rq(foodexp ~ income, tau=tvals,data=engel)
resids <- resid(q1)
psi <- function(e,tau){
tau - (e < 0)
}
getPsiMat <- function(model){
resids <- residuals(model)
psiMat <- resids
for(i in 1:dim(resids)[2]){
psiMat[,i] <- psi(resids[,i],model$tau[i])
}
psiMat
}
getPsiCov <- function(model){
resids <- residuals(model)
psiMat <- resids
for(i in 1:dim(resids)[2]){
psiMat[,i] <- psi(resids[,i],model$tau[i])
}
n <- dim(resids)[1]
psiCov <- t(psiMat)%*%psiMat/n
psiCov
}
n <- 100
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
q2 <- rq(y ~ x, tau=tvals)
psi1 <- getPsiCov(q1)
psi2 <- getPsiCov(q2)
pm1 <- getPsiMat(q1)
pm2 <- getPsiMat(q2)
eigenTrack <- NULL
n <- 500
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
for(k in seq(5,200,5)){
tvals <- seq(.05,.95, length=k)
q <- rq(y ~ x, tau=tvals)
psiCov <- getPsiCov(q)
eigenTrack <- rbind(eigenTrack, c(k,eigen(psiCov)$values[1]))
}
eigenTrack
psiMat
dim(psiMat)
pm1
pm2
dim(pm2)
head(pm20)
head(pm2)
head(x)
dim(x)
dim(pm1)
dim(pm2)
n <- 100
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
q2 <- rq(y ~ x, tau=tvals)
psi1 <- getPsiCov(q1)
psi2 <- getPsiCov(q2)
pm1 <- getPsiMat(q1)
pm2 <- getPsiMat(q2)
head(pm2)
dim(pm2)
dim(x)
blah <- pm2 %*% x
blah <- t(x)%*%pm2
blah
dim(blah0)
dim(blah0)
dim(blah)
blah[1,1:10]
test <- x[,1]*pm2
dim(test)
blah <- t(x)%*%pm2
dim(blah0)
dim(blah)
dim(pm2)
dim(pm2)
dim(blah)
x[,1]
x1 <- x[,1]
dim(x1)
length(z1)
dim(pm2)
length(x1)
head(pm2)
n <- 100
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
q2 <- rq(y ~ x, tau=seq(.1,.9,.1))
psi1 <- getPsiCov(q1)
psi2 <- getPsiCov(q2)
pm1 <- getPsiMat(q1)
pm2 <- getPsiMat(q2)
pm2
head(pm2)
test <- x[,1]*pm2
head(test)
head(x1)
head(x[,1])
testMat <- t(x)%*%pm2
dim(testMat)
dim(test)
apply(test,2,sum)
testMat[1,]
test
dim(test)
dim(testMat)
norm
norm(c(1,1,3))
sqrt(sum(u^2))
library(quantreg)
data(engel)
tvals <- seq(.1,.9,.1)
q1 <- rq(foodexp ~ income, tau=tvals,data=engel)
resids <- resid(q1)
psi <- function(e,tau){
tau - (e < 0)
}
getPsiMat <- function(model){
resids <- residuals(model)
psiMat <- resids
for(i in 1:dim(resids)[2]){
psiMat[,i] <- psi(resids[,i],model$tau[i])
}
psiMat
}
getPsiCov <- function(model){
resids <- residuals(model)
psiMat <- resids
for(i in 1:dim(resids)[2]){
psiMat[,i] <- psi(resids[,i],model$tau[i])
}
n <- dim(resids)[1]
psiCov <- t(psiMat)%*%psiMat/n
psiCov
}
n <- 100
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
q2 <- rq(y ~ x, tau=seq(.1,.9,.1))
psi1 <- getPsiCov(q1)
psi2 <- getPsiCov(q2)
pm1 <- getPsiMat(q1)
pm2 <- getPsiMat(q2)
eigenTrack <- NULL
n <- 500
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
dualTrack <- NULL
l2norm <- function(u){
sqrt(sum(u^2))
}
for(k in seq(5,200,5)){
tvals <- seq(.05,.95, length=k)
q <- rq(y ~ x, tau=tvals)
pm <- getPsiMat(q2)
vj <- apply(pm,1,l2norm)
# psiCov <- getPsiCov(q)
# eigenTrack <- rbind(eigenTrack, c(k,eigen(psiCov)$values[1]))
}
vj
head(vj)
dim(vj)
length(vj)
dim(pm)
k
tvals <- seq(.05,.95, length=k)
q <- rq(y ~ x, tau=tvals)
pm <- getPsiMat(q)
dim(pm)
vj <- apply(pm,1,l2norm)
length(vj)
k
n
p
tvals <- seq(.05,.95, length=k)
q <- rq(y ~ x, tau=tvals)
pm <- getPsiMat(q)
vj <- apply(t(x)%*%pm,1,l2norm)
length(vj)
vj
library(quantreg)
data(engel)
tvals <- seq(.1,.9,.1)
q1 <- rq(foodexp ~ income, tau=tvals,data=engel)
resids <- resid(q1)
psi <- function(e,tau){
tau - (e < 0)
}
getPsiMat <- function(model){
resids <- residuals(model)
psiMat <- resids
for(i in 1:dim(resids)[2]){
psiMat[,i] <- psi(resids[,i],model$tau[i])
}
psiMat
}
getPsiCov <- function(model){
resids <- residuals(model)
psiMat <- resids
for(i in 1:dim(resids)[2]){
psiMat[,i] <- psi(resids[,i],model$tau[i])
}
n <- dim(resids)[1]
psiCov <- t(psiMat)%*%psiMat/n
psiCov
}
n <- 100
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
q2 <- rq(y ~ x, tau=seq(.1,.9,.1))
psi1 <- getPsiCov(q1)
psi2 <- getPsiCov(q2)
pm1 <- getPsiMat(q1)
pm2 <- getPsiMat(q2)
eigenTrack <- NULL
n <- 500
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
dualTrack <- NULL
l2norm <- function(u){
sqrt(sum(u^2))
}
for(k in seq(5,200,5)){
tvals <- seq(.05,.95, length=k)
q <- rq(y ~ x, tau=tvals)
pm <- getPsiMat(q)
vj <- apply(t(x)%*%pm,1,l2norm)
dualTrack <- cbind(dualTrack, c(k,max(vj)))
# psiCov <- getPsiCov(q)
# eigenTrack <- rbind(eigenTrack, c(k,eigen(psiCov)$values[1]))
}
dualTrack
library(quantreg)
data(engel)
tvals <- seq(.1,.9,.1)
q1 <- rq(foodexp ~ income, tau=tvals,data=engel)
resids <- resid(q1)
psi <- function(e,tau){
tau - (e < 0)
}
getPsiMat <- function(model){
resids <- residuals(model)
psiMat <- resids
for(i in 1:dim(resids)[2]){
psiMat[,i] <- psi(resids[,i],model$tau[i])
}
psiMat
}
getPsiCov <- function(model){
resids <- residuals(model)
psiMat <- resids
for(i in 1:dim(resids)[2]){
psiMat[,i] <- psi(resids[,i],model$tau[i])
}
n <- dim(resids)[1]
psiCov <- t(psiMat)%*%psiMat/n
psiCov
}
n <- 100
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
q2 <- rq(y ~ x, tau=seq(.1,.9,.1))
psi1 <- getPsiCov(q1)
psi2 <- getPsiCov(q2)
pm1 <- getPsiMat(q1)
pm2 <- getPsiMat(q2)
eigenTrack <- NULL
n <- 500
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
dualTrack <- NULL
l2norm <- function(u){
sqrt(sum(u^2))
}
for(k in seq(5,200,5)){
tvals <- seq(.05,.95, length=k)
q <- rq(y ~ x, tau=tvals)
pm <- getPsiMat(q)
vj <- apply(t(x)%*%pm,1,l2norm)
dualTrack <- cbind(dualTrack, c(k,max(vj)))
# psiCov <- getPsiCov(q)
# eigenTrack <- rbind(eigenTrack, c(k,eigen(psiCov)$values[1]))
}
dualTrack
library(quantreg)
data(engel)
tvals <- seq(.1,.9,.1)
q1 <- rq(foodexp ~ income, tau=tvals,data=engel)
resids <- resid(q1)
psi <- function(e,tau){
tau - (e < 0)
}
getPsiMat <- function(model){
resids <- residuals(model)
psiMat <- resids
for(i in 1:dim(resids)[2]){
psiMat[,i] <- psi(resids[,i],model$tau[i])
}
psiMat
}
getPsiCov <- function(model){
resids <- residuals(model)
psiMat <- resids
for(i in 1:dim(resids)[2]){
psiMat[,i] <- psi(resids[,i],model$tau[i])
}
n <- dim(resids)[1]
psiCov <- t(psiMat)%*%psiMat/n
psiCov
}
n <- 100
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
q2 <- rq(y ~ x, tau=seq(.1,.9,.1))
psi1 <- getPsiCov(q1)
psi2 <- getPsiCov(q2)
pm1 <- getPsiMat(q1)
pm2 <- getPsiMat(q2)
eigenTrack <- NULL
n <- 10000
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
dualTrack <- NULL
l2norm <- function(u){
sqrt(sum(u^2))
}
for(k in seq(5,300,5)){
tvals <- seq(.05,.95, length=k)
q <- rq(y ~ x, tau=tvals)
pm <- getPsiMat(q)
vj <- apply(t(x)%*%pm,1,l2norm)
dualTrack <- cbind(dualTrack, c(k,max(vj)))
# psiCov <- getPsiCov(q)
# eigenTrack <- rbind(eigenTrack, c(k,eigen(psiCov)$values[1]))
}
dualTrack
plot(dualTrack)
plot(dualTrack)
plot(dualTrack[1,],dualTrack[,2])
plot(dualTrack[1,],dualTrack[2,])
seq(5,395,10)
library(quantreg)
data(engel)
tvals <- seq(.1,.9,.1)
q1 <- rq(foodexp ~ income, tau=tvals,data=engel)
resids <- resid(q1)
psi <- function(e,tau){
tau - (e < 0)
}
getPsiMat <- function(model){
resids <- residuals(model)
psiMat <- resids
for(i in 1:dim(resids)[2]){
psiMat[,i] <- psi(resids[,i],model$tau[i])
}
psiMat
}
getPsiCov <- function(model){
resids <- residuals(model)
psiMat <- resids
for(i in 1:dim(resids)[2]){
psiMat[,i] <- psi(resids[,i],model$tau[i])
}
n <- dim(resids)[1]
psiCov <- t(psiMat)%*%psiMat/n
psiCov
}
n <- 100
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
q2 <- rq(y ~ x, tau=seq(.1,.9,.1))
psi1 <- getPsiCov(q1)
psi2 <- getPsiCov(q2)
pm1 <- getPsiMat(q1)
pm2 <- getPsiMat(q2)
eigenTrack <- NULL
n <- 10000
p <- 8
x <- matrix(rnorm(n*p),ncol=p)
y <- x[,1] + x[,3] - x[,8] + (1+abs(x[,1]))*rnorm(n)
dualTrack <- NULL
l2norm <- function(u){
sqrt(sum(u^2))
}
for(k in seq(5,395,30)){
tvals <- seq(.05,.95, length=k)
q <- rq(y ~ x, tau=tvals)
pm <- getPsiMat(q)
vj <- apply(t(x)%*%pm,1,l2norm)
dualTrack <- cbind(dualTrack, c(k,max(vj)))
# psiCov <- getPsiCov(q)
# eigenTrack <- rbind(eigenTrack, c(k,eigen(psiCov)$values[1]))
}
dualTrack
plot(dualTrack[1,],dualTrack[2,])
plot(dualTrack[1,]^2,dualTrack[2,])
setwd("C:/Users/b157s966/Dropbox/My PC (BUSN-1XWNDC2)/Documents/RPackage")
library(Rcpp)
Rcpp.packages.skeleton("test")
Rcpp.package.skeleton("test")
Rcpp.package.skeleton("rcppTest")
setwd("C:/Users/b157s966/Dropbox/My PC (BUSN-1XWNDC2)/Documents/RPackage/rcpptest")
